Test casesPS: You asked for other suggestions for additions, here is one:  Add an"advanced options" to the ip subnet calculator and add an interface toallow network operators (or others) to enter a range of ip address (ie,192.111.96.0-192.111.110.0) and have the calculator spit out thecorrect"cidr" prefix and length notation:	192.111.96/21  (8 nets: 192.111.96 - 192.111.103)	192.111.104/22 (4 nets: 192.111.104 - 192.111.107)	192.111.108/23 (2 nets: 192.111.108 - 192.111.109)	192.111.110/24 (1 net:  192.111.110)or a prefix and length (ie, 192.111.96/28) and have the calculator spitoutthe correct range:	192.111.96.0/28 is a subnet representing 1/16 of a Class C network	Address range 192.111.96.0-192.111.96.15Address Range 198.109.24.0-198.109.24.31198.109.24.0/27range 141.212-141.215141.212/14range 193.1.4-193.1.15  Representing 12 Class C nets starting at 193.1.4 requires the aggregates:           193.1.4/22  (  4 nets:  193.1.4 - 193.1.7 )           193.1.8/21  (  8 nets:  193.1.8 - 193.1.15 )-------However, I've just tried it and it looks like there are a couple bugs:IP Address: 192.252.15.0-192.252.28.0When entered yields (when I scroll up through the components):192.252.14.0/23192.252.16.0/21192.252.24.0/22But it should give me:192.252.15.0/24192.252.16.0/21192.252.24.0/22192.252.28.0/24Note that the first component should actually be a /24 and the last /24wasn't even given.Also, when I scroll back down through the components I get:192.252.24.0/22192.252.22.0/23192.252.8.0/21192.252.14.0/23This is incorrect as well.