// ===========================================================================//	UIPNumKeyFilters.cp		©1996 Sustainable Softworks.//	Based on PowerPlant UKeyFilters//							©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#ifdef PowerPlant_PCH#include PowerPlant_PCH#endif#include "UIPNumKeyFilters.h"#include <PP_KeyCodes.h>#ifndef __SCRIPT__#include <Script.h>#endif// ---------------------------------------------------------------------------//		¥ IPNumField// ---------------------------------------------------------------------------//	Key Filter for IP Number characters////		> Identify delete and cursor keys//		> Accept numbers (0 to 9 and .)//		> Accept "-" for address ranges//		> Reject all other printing characters//		> PassUp all other charactersEKeyStatusUIPNumKeyFilters::IPNumField(	TEHandle		/* inMacTEH */,	UInt16			inKeyCode,	UInt16			&ioCharCode,	EventModifiers	/* inModifiers */){	EKeyStatus	theKeyStatus = keyStatus_PassUp;		if (IsTEDeleteKey(inKeyCode)) {		theKeyStatus = keyStatus_TEDelete;	} else if (IsTECursorKey(inKeyCode)) {		theKeyStatus = keyStatus_TECursor;	} else if (IsExtraEditKey(inKeyCode)) {		theKeyStatus = keyStatus_ExtraEdit;	} else if (IsPrintingChar(ioCharCode)) {		if (IsNumberChar(ioCharCode) ||			IsPeriodChar(ioCharCode) ||			(ioCharCode == '-') ||			(ioCharCode == '/')) {			theKeyStatus = keyStatus_Input;		} else {			theKeyStatus = keyStatus_Reject;		}	}		return theKeyStatus;}// Test for period character//	Extend if necessary to support international keyboards.BooleanUIPNumKeyFilters::IsPeriodChar(	UInt16	inChar){	return (inChar == '.');}// ---------------------------------------------------------------------------//		¥ IPNumListField// ---------------------------------------------------------------------------//	Key Filter for multiple IP Numbers characters (allows return as separator)////		> Identify delete and cursor keys//		> Accept numbers (0 to 9 and .)//		> Accept "-" for address ranges//		> Reject all other printing characters//		> PassUp all other charactersEKeyStatusUIPNumKeyFilters::IPNumListField(	TEHandle		/* inMacTEH */,	UInt16			inKeyCode,	UInt16			&ioCharCode,	EventModifiers	/* inModifiers */){	EKeyStatus	theKeyStatus = keyStatus_PassUp;		if (IsTEDeleteKey(inKeyCode)) {		theKeyStatus = keyStatus_TEDelete;	} else if (IsTECursorKey(inKeyCode)) {		theKeyStatus = keyStatus_TECursor;	} else if (IsExtraEditKey(inKeyCode)) {		theKeyStatus = keyStatus_ExtraEdit;	} else if (IsReturnKey(inKeyCode)) {	// allow return as input		theKeyStatus = keyStatus_Input;	} else if (IsPrintingChar(ioCharCode)) {		if (IsNumberChar(ioCharCode) ||			IsPeriodChar(ioCharCode) ||			(ioCharCode == '-') ||			(ioCharCode == '/')) {			theKeyStatus = keyStatus_Input;		} else {			theKeyStatus = keyStatus_Reject;		}	}		return theKeyStatus;}BooleanUIPNumKeyFilters::IsReturnKey(	UInt16	inKey){	return ((inKey & charCodeMask) == char_Return);}