// ===========================================================================//	CIfCaption.cp			©1997 Sustainable Softworks. All rights reserved.// ===========================================================================////	Pane with Interface State icons#ifdef PowerPlant_PCH#include PowerPlant_PCH#endif#include "CIfCaption.h"//#include <LStream.h>//#include <UDrawingUtils.h>//#include <UTextTraits.h>#include "CInterfacesConst.h"#include <Icons.h>#define NoError	0#ifndef __TEXTUTILS__//#include <TextUtils.h>#endif// ---------------------------------------------------------------------------//		¥ CIfCaption// ---------------------------------------------------------------------------//	Default ConstructorCIfCaption::CIfCaption()	: LCaption(){	mInterfaceState = 0;}// ---------------------------------------------------------------------------//		¥ LCaption(LStream*)// ---------------------------------------------------------------------------//	Construct from data in a StreamCIfCaption::CIfCaption(	LStream	*inStream)		: LCaption(inStream){	mInterfaceState = 0;}// ---------------------------------------------------------------------------//		¥ ~CIfCaption// ---------------------------------------------------------------------------//	DestructorCIfCaption::~CIfCaption(){}// ---------------------------------------------------------------------------//		¥ GetValue// ---------------------------------------------------------------------------//	Return the integer value represented by the text of CaptionSInt32CIfCaption::GetValue() const{	return mInterfaceState;}// ---------------------------------------------------------------------------//		¥ SetValue// ---------------------------------------------------------------------------//	Set a Caption to the text representation of an integer valuevoidCIfCaption::SetValue(	SInt32	inValue){	mInterfaceState = inValue;	Refresh();}// ---------------------------------------------------------------------------//		¥ DrawSelf// ---------------------------------------------------------------------------//	Draw the CaptionvoidCIfCaption::DrawSelf(){	OSErr	err;	Rect	frame;	CalcLocalFrameRect(frame);	// up or down	frame.left += 1;	frame.right = frame.left + 16;	if (mInterfaceState & kItemUp) {		err = ::PlotIconID (&frame, atNone, ttNone, ricsN_Up);		Assert_(err == NoError);	} else if (mInterfaceState & kItemDown) {		err = ::PlotIconID (&frame, atNone, ttNone, ricsN_Down);		Assert_(err == NoError);	}	// IP Masquerading	frame.left += 15;	frame.right = frame.left + 16;	if (mInterfaceState & kItemMasquerading) {		err = ::PlotIconID (&frame, atNone, ttNone, ricsN_Masquerading);		Assert_(err == NoError);	}	// Unnumbered	frame.left += 15;	frame.right = frame.left + 16;	if (mInterfaceState & kItemUnnumbered) {		err = ::PlotIconID (&frame, atNone, ttNone, ricsN_Unnumbered);		Assert_(err == NoError);	}	else if (mInterfaceState & kItemDhcp) {		err = ::PlotIconID (&frame, atNone, ttNone, ricsN_Dhcp);		Assert_(err == NoError);	}}