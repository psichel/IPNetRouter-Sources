// =================================================================================//	CInterfacesWindow.h	 	©1997 Sustainable Softworks. All rights reserved.// =================================================================================//	Configure Interfaces Window#pragma once#include "Cwindow.h"#include <LListener.h>#include "CInterfacesTable.h"#include "CResidentIfInfo.h"class LCaption;class LEditField;class CRoutesWindow;class CGatewayWindow;class CPortMapWindow;class CFilterWindow;class CArpWindow;class CDHCPWindow;class CConfigDocument;class LStdPopupMenu;class CInterfacesWindow : public CWindow, public LListener {public:	enum { class_ID = 'CIFw' };								CInterfacesWindow( LStream *inStream );	virtual		 				~CInterfacesWindow();	void				FinishCreateSelf();	void				SaveAtClose();	void				LoadPortMenu(LStdPopupMenu* inPortNamePopup);	Boolean				HandleKeyPress(const EventRecord&	inKeyEvent);	virtual void		ListenToMessage( MessageT inMessage, void *ioParam );	virtual Boolean		ObeyCommand(								CommandT			inCommand,								void				*ioParam);	virtual void		FindCommandStatus(CommandT inCommand,							Boolean &outEnabled, Boolean &outUsesMark,							UInt16 &outMark, Str255 outName);	Boolean				AllowSubRemoval(LCommander*	inSub);	void				ShowConnection();		void				UpdateTable();	void				DisplayInterfaceEntry(InterfaceEntry_t* inInterfaceEntry);	StringPtr			GetDisplayIfName(Str63 outStr);	void				SetDisplayIfName(Str63 inStr);	void				IoctlResponse(long inResult);protected:	private:		LControl*			mConnectButton;		CInterfacesTable*	mInterfacesTable;	LStdPopupMenu*		mPortNamePopup;	// pointer to popup menu object	SInt16				mPortNamePopupMax;	CRoutesWindow*		mRoutesWindow;	// pointer to routes window	CGatewayWindow*		mGatewayWindow;	// pointer to gateway window	CPortMapWindow*		mPortMapWindow;	// pointer to port map window	CFilterWindow*		mFilterWindow;	// pointer to filter window	CArpWindow*			mArpWindow;		// pointer to Arp window	CDHCPWindow*		mDHCPWindow;	// pointer to DHCP window	// ioctl	LCaption*			mStatusCaption;		// pointer to status caption object};