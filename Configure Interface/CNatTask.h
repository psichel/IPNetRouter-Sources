// ===========================================================================//	CNatTask.h			©1996 Sustainable Softworks. All rights reserved.// ===========================================================================//	Monitor Task for streams module#pragma once#include <LPeriodical.h>#include <OpenTptClient.h>//#include <stropts.h>#include "CInterfacesData.h"#include "ProxyModule.h"//class LInternetAddress;class CMonitorWindow;class CSnmpTask;// ===========================================================================//		¥ CNatTask// ===========================================================================//	Class that uses threaded I/O to monitor Data Link providerclass CNatTask : public LPeriodical {public:						CNatTask();	virtual				~CNatTask();	void				StartNat(InterfaceEntry_t* inInterfaceEntry);	void				PauseNat(InterfaceEntry_t* inInterfaceEntry);	OTResult			SetExcludeNetwork(Str32 inPortName, NetNumber_t* inNetwork);	OTResult			UpdateNatPortNames();	virtual void		SpendTime(const EventRecord &inMacEvent);protected:		OTTimeStamp			mLastStamp;					// last time we aged table	UInt32				mNatTableCount[kNatNumDim];};