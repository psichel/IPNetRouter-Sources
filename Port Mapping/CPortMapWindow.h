// =================================================================================//	CPortMapWindow.h	 	©1997 Sustainable Softworks. All rights reserved.// =================================================================================//	Configure Interfaces Window#pragma once#include "Cwindow.h"#include "MyTypes.h"#include <LListener.h>#include <LCleanupTask.h>#include <LPeriodical.h>#include "CObjectMaster.h"#include <OpenTptClient.h>#include <stropts.h>class CReceiveUDPThread;class CSendUDPThread;class CTurboUDPEndpoint;class LCaption;class LEditField;class CLogWindow;class CPortMapTable;class CConfigDocument;class CPortMapWindow : public CWindow, public LListener {public:	enum { class_ID = 'MapW' };								CPortMapWindow( LStream *inStream );	virtual		 				~CPortMapWindow();	void				FinishCreateSelf();	void				AttemptClose();	Boolean				HandleKeyPress(const EventRecord&	inKeyEvent);	virtual void		ListenToMessage( MessageT inMessage, void *ioParam );	virtual Boolean		ObeyCommand(								CommandT			inCommand,								void				*ioParam);		void				UpdateTable();	void				DisplayPortMapEntry(PortMapEntry_t*	inMapEntry);	OTResult			DoCommand(MessageT inEventCode);	void				IoctlResponse(long inResult);protected:	LEditField*			mApparentIPField;	// non editable NAT if field	LEditField*			mApparentPortField;	LEditField*			mActualPortField;	LStdCheckBox*		mFlagStaticCheckBox;	LStdCheckBox*		mFlagPermCheckBox;	LStdCheckBox*		mPermanentOnlyCheckBox;	LStdPopupMenu*		mProtocolPopup;	LStdPopupMenu*		mProtocolPortNamesPopup;	LCaption*			mPortNameCaption;	private:		LControl*			mUpdateButton;		CPortMapTable*		mPortMapTable;	LCaption*			mStatusCaption;		// pointer to status caption object	UInt32				mLastTime;			// tick counter	UInt16				mProtocolOther;		// remember unknown protocol value	Boolean				mIsMonitoring;		// updating table periodically};// constants#define kPortMapWindowName "\pPort Mapping"const SInt16 kPortMapStateSize		= 4;