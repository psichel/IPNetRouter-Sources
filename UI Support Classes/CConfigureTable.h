// =================================================================================//	CConfigureTable.h	 	©1996-1999 Sustainable Softworks. All rights reserved.// =================================================================================//	Configurable table object to display common TCP/IP information#pragma once#include "CDisplayTable.h"#include <LCommander.h>const SInt16 kMaxDCols		= 10;class CConfigureTable : public CDisplayTable, public LCommander {public:	enum { class_ID = 'DTab' };								CConfigureTable( LStream *inStream );	virtual		 				~CConfigureTable();	void			SetWindow(LWindow* inWindow);	void			ClearTable();	void			ClearRow(TableIndexT inRow);	virtual void	InsertRows(SInt32 inHowMany, TableIndexT inAfterRow,								void *inCellData);	virtual void	RemoveRows(SInt32 inHowMany, TableIndexT inFromRow);	virtual void	SetColWidth(SInt16 inWidth, TableIndexT inFrom,									TableIndexT inTo);	SInt16			GetColWidth( TableIndexT inCol );	virtual void	SetColType(UInt8 inType, TableIndexT inFrom,									TableIndexT inTo);	UInt8			GetColType( TableIndexT inCol );	void			SetCommentDataSize(SInt32 inCommentDataSize, UInt8 inNumComments);	SInt32			FetchCommentDataIndex(						const TableIndexT inRow, const TableIndexT inSelect);	void			SetCommentData( TableIndexT inRow, UInt8 inSelect, ConstStr255Param inStr);	Boolean			GetCommentData( TableIndexT inRow, UInt8 inSelect, Str255 outStr);	UInt32			GetRowIPAddr( TableIndexT inRow );	void			ClickCell(						const TableCellT		&inCell,						const SMouseDownEvent&	inMouseDown);	Boolean			AdjustView(const TableCellT &inCell);	void			SelectRow(const TableCellT &inCell, Boolean inExtendFlag);	virtual void	DontBeTarget();	virtual Boolean	HandleKeyPress(const EventRecord&	inKeyEvent);	void			LaunchURL(Str63 inScheme);	virtual Boolean	ObeyCommand(CommandT inCommand, void* ioParam);		virtual void	FindCommandStatus(CommandT inCommand,						Boolean &outEnabled, Boolean &outUsesMark,						UInt16 &outMark, Str255 outName);	virtual void	DoCopy();	void			SpaceOver(Handle inDestH, TableIndexT& ioDestLen,						TableIndexT inLineOffset, TableIndexT inColOffset);	void			AppendString(Handle inDestH, TableIndexT& ioDestLen,						ConstStr255Param inStr);	virtual void	HiliteCell(const TableCellT &inCell);	virtual void	UnhiliteCell(const TableCellT &inCell);	virtual void	ActivateSelf();	virtual void	DrawCell(const TableCellT	&inCell);protected:	SInt32			mMultiColWidth[kMaxDCols+1];	SInt32			mColType[kMaxDCols+1];		// column data types	LArray			*mCommentData;	UInt8			mNumComments;	SInt32			mCommentDataSize;	virtual Boolean	FetchLocalCellFrame(const TableCellT &inCell,									Rect &outCellFrame);	virtual Boolean	FetchLocalContentFrame(const TableCellT &inCell,									Rect &outCellFrame);	virtual Boolean	FetchLocalRowFrame(const TableIndexT &inRow,									Rect &outCellFrame);	virtual void	FetchCellHitBy(const SPoint32 &inImagePt,									TableCellT &outCell);	UInt8			mHiliteStyle;	// remember hilite style for undo	TableIndexT		mSelectionStart;	TableIndexT		mSelectionEnd;	LWindow*		mWindow;	Handle			mFormatH;		// Time/Date formatting resourceprivate:};// column data typesconst SInt16 kColTypeNone		= 0;const SInt16 kColTypeNumber 	= 1;const SInt16 kColTypeMark		= 2;	// check, cross, etc.const SInt16 kColTypeIPAddr 	= 3;const SInt16 kColTypeHWAddr	    = 4;const SInt16 kColTypeSeconds	= 5;	// elapsed timeconst SInt16 kColTypeTime		= 6;	// date timeconst SInt16 kColTypeState		= 7;const SInt16 kColTypeComment1	= 11;const SInt16 kColTypeComment2	= 12;const SInt16 kColTypeComment3	= 13;// column data widthsconst SInt16 kColWidthNumber	= 50;const SInt16 kColWidthIPAddr	= 90;const SInt16 kColWidthHWAddr	= 100;const SInt16 kColWidthSeconds	= 50;const SInt16 kColWidthTime		= 100;const SInt16 kColWidthState	    = 50;// indicate comment data for this entryconst UInt32 kCommentFlag		= 0xFFFFFFFF;// Hilite Stylesconst UInt8 kHiliteNone			= 0;const UInt8 kHiliteSelect		= 1;const UInt8 kHiliteEdit			= 2;const UInt8 kHiliteInactive		= 3;