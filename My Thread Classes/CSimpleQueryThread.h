// ===========================================================================//	CSimpleQueryThread.h	©1997 Sustainable Softworks. All rights reserved.// ===========================================================================//	Thread object that ecapsulates the idea of a simple TCP/IP query.//	Open a connection to the specified server port, send request,//	and receive response (if any).#pragma once#include "CObjectMaster.h"//#include <LThread.h>class LTCPEndpoint;class CSimpleQueryThread : 		public LThread {public:						CSimpleQueryThread(								CObjectMaster*		inObjectMaster,								LTCPEndpoint*		inNetworkEndpoint,								ConstStr255Param	inQueryName,								ConstStr255Param	inServerAddress,								UInt16				inServerPort);	virtual				~CSimpleQueryThread();	void				StartDisconnect();	void				SetTimeout(UInt32 inTimeoutSeconds);		protected:	virtual void*		Run();	CObjectMaster* 		mObjectMaster;	LTCPEndpoint*		mEndpoint;					// network endpoint object	Str255				mQueryName;					// Query text	Str255				mServerAddressString;		// Address of server to use	UInt16				mServerPort;				// target port for query	UInt32				mTimeoutSeconds;			// time out for endpoint operations	Boolean				mStartDisconnect;		OSStatus			mResult;};// define maximum transfer unitconst UInt32 kMaxTransferUnit = 2048;		// 2048 is larger than typical network MTU												