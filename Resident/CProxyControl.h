// =================================================================================//	CProxyControl.h	 			©1997 Sustainable Softworks. All rights reserved.// =================================================================================//	Shared data and methods for accessing our Proxy STREAMS module#ifndef _H_CProxyControl#define _H_CProxyControl#pragma once#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#include <LListener.h>#include <LCleanupTask.h>#include <OpenTransport.h>class CTurboUDPEndpoint;class CProxyControl : public LCleanupTask, public LListener, public LPeriodical {public:	enum { class_ID = 'CRIf' };							CProxyControl();	virtual		 			~CProxyControl();	void				Terminate();	virtual void		ListenToMessage( MessageT inMessage, void *ioParam );    void                SpendTime(const EventRecord &inMacEvent);	void				SetupStream();	void				SetupPort();	void				ProxyConnect();	OTResult			ProxyIoctl(UInt32 inCmd, void* inData);	OTResult			AsyncOpenAndClose();protected:	void                DoCleanup();	// Proxy control	void				NSInsertModule();	void				PFInsertModule();	UInt8				PFCheckModule();	EndpointRef			mProxyEndpointRef;	// network endpoint for IOCTLs	CTurboUDPEndpoint*	mProxyEndpoint;		// network endpoint for event notification	static pascal void	Int_NotifierProc(								void*			inContextPtr,								OTEventCode		inEventCode,								OTResult		inResult,								void*			inCookie);private:		Boolean				isDoneInsertModule;	OTTimeStamp			mLastStamp;					// last time we aged table};// constants//const ResIDT rSTRN_TCPPrefs		= 134;		// STR# resource//const SInt16 kSTRN_PrefsName		= 1;		// index for name of TCP/IP Prefs fileconst ResIDT rPPob_ChangeMonitor	= 140;		// Changing Monitorconst SInt16 kConfigCaption			= 4;const SInt16 kModuleNameSize		= 8;const Str31 kProxyModuleName		= "\pProxym";#endif