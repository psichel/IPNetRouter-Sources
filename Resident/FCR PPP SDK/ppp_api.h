/* 	ppp_api.h: API for use with the FCR PPP driver   	   	This document contains proprietary information developed by    		FCR Software Inc.   		222 Third Street, Suite 3130   		Cambridge, MA 02142   		   	and should not be distributed, copied, or disclosed without explicit   	permission of FCR Software, Inc..   	   	You may use this document and the source herein for developing    	applications that use the LinkUPPP! (FCR PPP) driver.	Copyright 1992-97 FCR Software, Inc.		Last modified:	November 6, 1997 - Jessica Kahn <jess@fcr.com>*/#pragma once#if PRAGMA_ALIGN_SUPPORTED#pragma options align=mac68k#endif#define PPP_DRVR_NAME 		".PPP"			/* Device manager name of the DRVR */#define FCR_DRVR_NAME 		".FCRPPP"		/* Device manager name of the DRVR *//* DLC Protocol Numbers */#define PPP_LCP				0xc021			/* Link Control Protocol */#define PPP_UPAP			0xc023			/* User/Password Authentication Protocol */#define PPP_CHAP            0xc223  		/* Crytpographic Handshake Protocol */#define PPP_IPCP			0x8021			/* IP Control Protocol */#define PPP_ATCP			0x8029			/* AppleTalk Control Protocol *//* Control/status codes for .PPP driver */#define	D_CTRL_START		1002			/* Sends a start command to driver */#define	D_CTRL_STOP			1003			/* Sends a stop command to driver */#define	D_CTRL_GETSTATE_NCP	1007			/* Used to get protocol information */#define D_STAT_GETSTATUS	1002			/* Used to get connection status info *//* FSM states */#define CLOSED		1			/* Connection closed */#define LISTEN		2			/* Listening for a Config Request */#define REQSENT		3			/* Sent a Config Request */#define ACKSENT		4			/* Sent a Config Ack */#define ACKRCVD		5			/* Received a Config Ack */#define OPEN		6			/* Connection open */#define TERMSENT	7			/* Sent a Terminate Request *//* PPP Status Block */typedef struct {	short	dummy1;				/* Reserved for use by FCR Software, Inc. */	short	dummy2;				/* Reserved for use by FCR Software, Inc. */	short	mode;				/* Connection mode (state) */	short	result;				/* Holds result when script is done running */	char	*message;			/* Ptr to message buffer to fill. Buffer must */								/* be at least 128 bytes in size */#define PPP_MAX_PROTOCOL 8		/* Number of NCPs */	/* Holds info on all NCPs */	struct {		long	cp_name;						short	cp_protocol;		short	cp_status;	} cp[PPP_MAX_PROTOCOL];		unsigned long	version;				/* Driver version information */		unsigned long	frames_in;				/* Frame input */	unsigned long	frames_error_in;		/* Frame input with an error */	unsigned long	frames_out;				/* Frame output */	unsigned long	frames_error_out;		/* Frame output with an error */	unsigned long	chars_in;				/* Chars input */	unsigned long	chars_out;				/* Chars output */	unsigned long	chars_in_no_frame;		/* Chars input w/no frame avail */	unsigned long	up_seconds;				/* Seconds connection has been open */	unsigned long	idle_seconds;			/* Seconds connection has been idle */#define	STATUS_IDLE		0					/* Script idle */#define	STATUS_INIT		1					/* Initializing */#define	STATUS_SCRIPT	2					/* Running script */#define STATUS_STALLED	3					/* Script stalled waiting for free iopb */#define	STATUS_DONE		4					/* Script done; result in result */#define	STATUS_RECYCLE	5					/* Recycling serial port */#define	STATUS_FAULT	6					/* Script faulted due to script error */#define	STATUS_TIMEOUT	7					/* Link coming down due to idle-timeout */#define	STATUS_CLOSING	8					/* Link coming down */#define	STATUS_PPP		10					/* Framing, PPP */#define	STATUS_SLIP		11					/* Framing, SLIP */#define	SCRIPT_GENERICCCLERROR		-6002	/* Generic ccl error */#define	SCRIPT_TARGETLABELUNDEFINED	-6004	/* Target label not defined in script */#define	SCRIPT_BADPARAMETER			-6005	/* Bad parameter */#define SCRIPT_TOOMANYSCRIPTS		-6007	/* One or more scripts already open */#define	SCRIPT_SCRIPTCANCELED		-6008	/* Script canceled by user */#define SCRIPT_TOOMANYLINES			-6009	/* Script contains too many lines */#define SCRIPT_TOOMANYCHARS			-6010	/* Script contains too many characters */#define SCRIPT_NOTINITIALIZED		-6011	/* Script not initialized */#define SCRIPT_CANCEL				-6012	/* Cancel in progress */#define SCRIPT_EXITNOERR			-6014	/* Exit, no error */#define SCRIPT_LABELOUTOFRANGE		-6015	/* Label is out of range */#define	SCRIPT_BADCOMMAND			-6016	/* Bad command */#define	SCRIPT_MATCHINDEXTOOBIG		-6018	/* Match index is out of bounds */#define	SCRIPT_MODEMNOTRESPONDING	-6019	/* Modem error; modem not responding */#define	SCRIPT_NODIALTONE			-6020	/* No dial tone */#define	SCRIPT_NOCARRIER			-6021	/* No carrier */#define	SCRIPT_BUSY					-6022	/* The line is busy */#define	SCRIPT_NOANSWER				-6023	/* Remote modem did not answer */#define	SCRIPT_NOORIGINATE_CMD		-6024	/* No @ORIGINATE in script */#define	SCRIPT_NOANSWER_CMD			-6025	/* No @ANSWER in script */#define	SCRIPT_NOHANGUP_CMD			-6026	/* No @HANGUP in script */#define	SCRIPT_NOLOGIN_CMD			-6027	/* No @LOGIN in script */#define	SCRIPT_SERIAL_HANG			-7000	/* Serial driver hung */#define	SCRIPT_LOGIN_FAILED			-7001	/* Automatic login script failed */#define	SCRIPT_JSR_STACK_OVERFLOW	-7002	/* Too many jsrs */#define SCRIPT_SERIAL_WRONGTYPE		-7003	/* Unsupported port type */} PPPStatusBlock;/* IPCP Configuration Block */typedef struct {	char	ipcp_tcp_hdr_comp;		/* Boolean - protocol compression */	long	ipcp_local_addr;		/* IP address of ourselves (local side) */	long	ipcp_remote_addr;		/* IP address of remote side */	long	ipcp_primary_dns;		/* IP address of primary nameserver */	long	ipcp_secondary_dns;		/* IP address of secondary nameserver */} PPPIPCPConfigBlock;/* NCP Query Block */typedef struct {	short	protocol;				/* Ethernet protocol type */	Ptr		pointer;				/* No support for PowerPC code */	short	size;					/* Buffer size */} NCPQueryBlock;/* ATCP Configuration Block */typedef struct {	long	atcp_local_address;		/* Our appletalk address */	long	atcp_server_id;			/* Server's version */	short	atcp_server_class;		/* Server's class */	Str32	atcp_server_name;		/* Server's display name */	Str32	atcp_zone_name;			/* Zone name we're in */	long	atcp_default_router;	/* Address of local router */	Str255	atcp_suppress_bdcst;	/* DDP protocol vector */	long	atcp_remote_address;	/* Peers appletalk address */	short	atcp_flags;				/* Flags word */	char	reserved[32];			/* Reserved for use by FCR Software, Inc. */} PPPATCPConfigBlock;#if PRAGMA_ALIGN_SUPPORTED#pragma options align=reset#endif