// =================================================================================//	CControlOTPPP.h	 			©1997-98 Sustainable Softworks. All rights reserved.// =================================================================================//	Object to control OT/PPP connection//	This object is a subclass of CControlLink#ifndef _H_CControlOTPPP#define _H_CControlOTPPP#pragma once#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#include <LListener.h>#include <LPeriodical.h>#include <LString.h>#include <OpenTransport.h>#include <OpenTptPPP.h>#include "CControlLink.h"#include "CObjectMaster.h"class CTurboUDPEndpoint;class CSendUDPThread;class CControlOTPPP : public CControlLink, LPeriodical,							 LListener, public CObjectMaster {public:							CControlOTPPP(Str63 inPortName);	virtual		 			~CControlOTPPP();	void				Terminate();	virtual OTResult	StartMonitoring(Boolean inShowDialogs);	virtual OTResult	StopMonitoring();	virtual OTResult	Connect(Boolean inShowDialogs);	virtual OTResult	Disconnect(Boolean inShowDialogs);	virtual UInt32		GetIpAddress();	virtual UInt32		GetRemoteAddress();	virtual Boolean		IsLinkUp();	virtual Boolean		IsMonitoring();	virtual Boolean		AlertEnable(Boolean inFlag);protected:	virtual OTResult	PPPIoctl(UInt32 inCmd, void* inData);	virtual OTResult	PPPOptionManagement(TOptMgmt* cmd);	virtual void		ObjectThreadDied(LThread *inThread);	virtual void		ListenToMessage( MessageT inMessage, void *ioParam );	virtual void		SpendTime(const EventRecord &inMacEvent);	// PPP control		EndpointRef			mPPPEndpointRef;	// PPP control endpoint for synch ioctls	CTurboUDPEndpoint*	mPPPEndpoint;		// PPP control endpoint	CSendUDPThread*		mSendUDPThread;	UInt32				mLastTime;	UInt32				mPPPState;			// state of PPP link	UInt32				mPPPLocalAddress;	// PPP local protocol address	UInt8				mDelayCount;		// retry count	private:	};// constantsconst SInt16 kPPPStateNone				= 0;const SInt16 kOptionPadSize				= 8;		// defensive padding for option requests#endif