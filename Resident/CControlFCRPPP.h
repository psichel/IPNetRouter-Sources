// =================================================================================//	CControlFCRPPP.h	 			©1997-98 Sustainable Softworks. All rights reserved.// =================================================================================//	Object to control FCR PPP connection//	This object is a subclass of CControlLink#ifndef _H_CControlFCRPPP#define _H_CControlFCRPPP#pragma once#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#include <LPeriodical.h>#include <LString.h>#include "CControlLink.h"class DriverInterface;class CControlFCRPPP : public CControlLink, LPeriodical {public:							CControlFCRPPP(Str63 inPortName);	virtual		 			~CControlFCRPPP();	void				Terminate();	virtual OTResult	StartMonitoring(Boolean inShowDialogs);	virtual OTResult	StopMonitoring();	virtual OTResult	Connect(Boolean inShowDialogs);	virtual OTResult	Disconnect(Boolean inShowDialogs);	virtual UInt32		GetIpAddress();	virtual UInt32		GetRemoteAddress();	virtual Boolean		IsLinkUp();	virtual Boolean		IsMonitoring();protected:	virtual void		SpendTime(const EventRecord &inMacEvent);	// PPP control		DriverInterface*	mDriver;	UInt32				mLastTime;	UInt32				mState;	private:	};// constantsconst SInt16 kStateNone			    = 0;const SInt16 kStateIdle			    = 1;	// state >= 1 means we're idlingconst SInt16 kStateDown			    = 2;const SInt16 kStatePendingUp		= 3;const SInt16 kStatePendingDown		= 4;const SInt16 kStateUp				= 5;const SInt16 kTestInterval			= 80;	// approximately every second#endif