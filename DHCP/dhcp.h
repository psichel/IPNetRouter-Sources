// ===========================================================================//	dhcp.h			©1999 Sustainable Softworks, All rights reserved.// ===========================================================================// dhcp protocol definitions#ifndef _H_dhcp#define _H_dhcp#pragma once// DHCP protocol portsconst SInt16 kDHCPServerPort			= 67;const SInt16 kDHCPClientPort			= 68;const UInt32 kBroadcastAddr		        = 0xFFFFFFFF;// DHCP option codesconst SInt16 kOptionPad			    	= 0;const SInt16 kOptionSubnetMask			= 1;const SInt16 kOptionRouters			    = 3;const SInt16 kOptionDomainServer		= 6;const SInt16 kOptionHostName			= 12;const SInt16 kOptionDomainName			= 15;const SInt16 kOptionAddressRequest		= 50;const SInt16 kOptionAddressTime		    = 51;const SInt16 kOptionOverload			= 52;	// use Server Name & Bootfile Name for optionsconst SInt16 kOptionDHCPMessageType	    = 53;const SInt16 kOptionDHCPServerID		= 54;const SInt16 kOptionParameterList		= 55;const SInt16 kOptionDHCPMessage		    = 56;const SInt16 kOptionDHCPMaxMsgSize		= 57;const SInt16 kOptionRenewalTime		    = 58;const SInt16 kOptionRebindingTime	   	= 59;const SInt16 kOptionClassID			    = 60;const SInt16 kOptionClientID			= 61;const SInt16 kOptionEnd				    = 255;// DHCP message typesconst SInt16 kDHCPBootP				    = 0;const SInt16 kDHCPDiscover				= 1;const SInt16 kDHCPOffer				    = 2;const SInt16 kDHCPRequest				= 3;const SInt16 kDHCPDecline				= 4;const SInt16 kDHCPAck					= 5;const SInt16 kDHCPNack					= 6;const SInt16 kDHCPRelease				= 7;const SInt16 kDHCPInform				= 8;const SInt16 kBootRequest				= 1;const SInt16 kBootReply				    = 2;// DHCP UDP messagetypedef struct DHCPMessage {	UInt8	op;					// operation (1=request, 2=reply)	UInt8	htype;				// hardware type (1=Ethernet)	UInt8	hlen;				// hardware address length (6 for Ethernet)	UInt8	hops;				// client sets to 0, used by relay agents	UInt32	xid;				// match requestes with responses	UInt16	secs;				// elapsed seconds since client began aquisition process	UInt16	flags;				// flags (MSB=1 for broadcast response)	UInt32	ciaddr;				// if client is already bound	UInt32	yiaddr;				// address to be assigned	UInt32	siaddr;				// next server to use in bootstrap	UInt32	giaddr;				// relay agent IP addr	UInt8	chaddr[16];			// client hardware address	char	sname[64];			// optional server host name	char	file[128];			// Boot file name (null terminate)	UInt8	options[312];		// Optional parameters field} DHCPMessage_t;#endif