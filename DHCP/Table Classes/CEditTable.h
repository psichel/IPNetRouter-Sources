// =================================================================================//	CEditTable.h	 		   ©1999 Sustainable Softworks. All rights reserved.// =================================================================================//	Table object that supports edit in place#pragma once#include "CConfigureTable.h"#include <LCommander.h>#include <LListener.h>const SInt16 kTableEditField		= 1011;const SInt16 kTableInsertButton		= 1012;const SInt16 kTableDeleteButton		= 1013;class CEditTable : public CConfigureTable, public LListener {public:	enum { class_ID = 'ETbl' };							CEditTable( LStream *inStream );	virtual		 			~CEditTable();	virtual Boolean		HandleKeyPress(const EventRecord&	inKeyEvent);	virtual void		ListenToMessage( MessageT inMessage, void *ioParam );protected:	virtual void	HiliteCell(const TableCellT &inCell);	virtual void	UnhiliteCell(const TableCellT &inCell);	virtual void	ClickCell(const TableCellT &inCell,							  const SMouseDownEvent &inMouseDown);	virtual void	ShowSelf();	TableIndexT		FindLastRow();	void			AddRow();	Boolean			InEditCell();	virtual void	UpdateTable();	virtual void	UpdateData();	void			EditCell(Boolean inSetup);	LEditField		*mEditField;	TableCellT		mEditCell;		// cell being edited if any	UInt8			mHiliteStyle;	// remember hilite style for undo};const SInt16 kMaxCharsIPAddr	= 15;const SInt16 kMaxCharsHWAddr	= 18;const SInt16 kMaxCharsComment	= 64;