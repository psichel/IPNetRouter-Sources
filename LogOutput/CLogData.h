// ===========================================================================//	CLogData.h			©1999 Sustainable Softworks, All rights reserved.// ===========================================================================//	Data object to hold Logged output text//	This object supports both the Log Window and a Log File#ifndef _H_CLogData#define _H_CLogData#pragma once#include "CSignalDataEvent.h"const SInt32 kTextDim		= 31 * 1024;	// stay under 32K for safetyconst SInt32 kTextAdjust	= 8192;class	CLogData : public CSignalDataEvent {public:					CLogData();	virtual			~CLogData();	void			Init();	void			SignalDataChange();	SInt32			SetDataAddText(char* inText, SInt32 inLength);						// returns length of text added						// if !mNewTextFlag, set ReadIndex to start of text added			// The current log window implementation uses TextEdit, so limit			// text to 32K maximum, if more text is added, text is automatically			// deleted from the start of the log.	SInt32			GetDataAllText(char** outPtr, SInt32 *outLength);						// set outPtr to point to text buffer						// return outLength	SInt32			GetDataNewText(char** outPtr, SInt32 *outLength);						// Set *outPtr to point to new text in buffer						// clear new text flag						// return outLength	private:	char			mText[kTextDim];	SInt32			mReadIndex;	SInt32			mWriteIndex;	Boolean			mNewTextFlag;	};const SInt16 kLogData				= 'l';#define kDataChange	1#endif