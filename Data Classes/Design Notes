/*Design Notes for IPNetRouter save and restore settings fileFiles are not documents to be edited in place, but previouslysaved configurations that can be restored.  It does not make senseto open more than one document at a time.Two Supported operations:(1) Save current configuration(2) Restore previously saved configurationSaved configuration files are stored as plain text filesso they can be examined, modified, and distributed using commontext tools.  The files specify interfaces and routes to be added orremoved.Design Questions:- Should the window title show the name of the last file loaded?    No, because the data in the window does not reflect the state  of the file or document loaded.    It would be convenient however to remember the name of the last  file loaded and use it as the default name when saving the current  configuration.  It could also be used for Revert.  - Can files be combined to build a configuration, or does loading  a previously saved configuration start from a standard initial state?    Each file defines a complete configuration to be restored.  Any interfaces or routes that are not part of the  new configuration file should be removed.  It is not necessary  to reset the configuration however before adjusting it to match  a new configuration file.    Use "#addOnly" to indicate supplemental configuration data that  does not replace the existing configuration.  Interface and Routing information are combined in a single filefor simplicity.File Format:Lines of printable text separated by CR ('\r')The first two characters of each line determine how it is interpreted.	+i define interface and bring it up	-i define interface but leave or bring it down	+r add route	-r delete routeAny other initial characters cause the line to be skipped as a comment.The rest of each line consists of text parameters delimited by \(\ separated values allow empty parameters).	+i\<portName>\<interfaceName>\<addr>\<mask>	-i\<portName>\<interfaceName>\<addr>\<mask>	+r\<routeType>\<destAddr>\<gatewayAddr>	-r\<routeType>\<destAddr>\<gatewayAddr>Any additional text on the line is treated as a comment,A missing parameter is treated as "0" or empty.Export means saving the current Interfaces and Routes to a file.Import means processing each line of the file to add or removethe corresponding interface or route.Notice import processing may take some time as individual interfacesare configured.  For efficiency, it is not necessary to update theinterface display table after each line.  Although it is necessaryto recognize, stop, and report any errors encountered.Import processing could save the file data internally andinvoke a thread to process it.Notice all interfaces and routes including those created bythe TCP/IP control panel are saved.- Removing a route that does not exist always succeeds.- There is no need for a separate command to remove an interface.  Any interface that is not included in the saved configuration  is automatically removed.  Restore Processing Steps:- Check each existing interface to see if it is included  in the configuration file being processed.  If so, mark  it as already present, if not try to remove it.- For each interface in the configuration file that is  not already present, try to create it.- Update interface and route table to show new information- Check each existing route to see if it is included  in the configuration file being processed.  If so, mark  it as already present, if not try to remove it.- For each route in the configuration file that is  not already present, try to create it.  Implementation details:The configuration file is read into a configuration object thatstores the data for ease of manipulation.  This object is passedto a method that tries to recreate the specified configurationasynchronously.The configuration includes both the interface/route dataand a few single variables for "isDirty, autoConfigure,and forwarding.Notice for PPP the IP address and gateway can be assigneddynamically.  If trying to restore a PPP interface and youfind a PPP interface already present, use the existingdynamically assigned address.  If restoring a default gatewayand an existing default gateway is already present thatis the PPP address plus 1, use this as the dynamicallyassigned gateway address.*/