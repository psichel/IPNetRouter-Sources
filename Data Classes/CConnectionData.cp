// ===========================================================================//	CConnectionData.cp			©1998 Sustainable Softworks, All rights reserved.// ===========================================================================// PPP Connection Data#include "CConnectionData.h"// ---------------------------------------------------------------------------------//		¥ CConnectionData	[Constructor]// ---------------------------------------------------------------------------------CConnectionData::CConnectionData(){	// initialization	mLinkState = kLinkStateNone;	mPPPlocalAddress = 0;}// ---------------------------------------------------------------------------------//		¥ ~CConnectionData	[Destructor]// ---------------------------------------------------------------------------------CConnectionData::~CConnectionData(){}#pragma mark --- Accessors ---// ---------------------------------------------------------------------------------//		¥ SetDataLinkState// ---------------------------------------------------------------------------------voidCConnectionData::SetDataLinkState(UInt32 inValue){	mLinkState = inValue;	SignalDataEvent( DATA_ID(kConnectionData, kDataLinkState) );	LCommander::SetUpdateCommandStatus(true);}UInt32CConnectionData::GetDataLinkState()		{ return mLinkState; }// ---------------------------------------------------------------------------------//		¥ SetDataPPPlocalAddress// ---------------------------------------------------------------------------------voidCConnectionData::SetDataPPPlocalAddress(UInt32 inValue){	mPPPlocalAddress = inValue;	SignalDataEvent( DATA_ID(kConnectionData, kDataPPPlocalAddress) );}UInt32CConnectionData::GetDataPPPlocalAddress()			{ return mPPPlocalAddress; }// ---------------------------------------------------------------------------------//		¥ SetDataController// ---------------------------------------------------------------------------------voidCConnectionData::SetDataController(CControlLink* inController){	mController = inController;	SignalDataEvent( DATA_ID(kConnectionData, kDataController) );}CControlLink*CConnectionData::GetDataController()			{ return mController; }