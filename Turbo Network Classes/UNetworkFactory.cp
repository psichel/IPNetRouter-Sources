// ===========================================================================//	UNetworkFactory.cp				©1996 Metrowerks Inc. All rights reserved.// ===========================================================================//	Modified to remove MacTCP stuff, PAS 3/12/97////	Use this class to create network endpoints and mappers. It will choose//	the best configuration (i.e. MacTCP or OpenTransport) given the system//	software that is installed on the host machine.#include <UNetworkFactory.h>#include <LOpenTptTCPEndpoint.h>//#include <LMacTCPTCPEndpoint.h>//#include <LMacTCPUDPEndpoint.h>#include <LOpenTptUDPEndpoint.h>//#include <LMacTCPInetMapper.h>#include <LOpenTptInetMapper.h>//#include <UMacTCPSupport.h>#include <UOpenTptSupport.h>// ---------------------------------------------------------------------------//		¥ CreateTCPEndpoint// ---------------------------------------------------------------------------//	Create the best endpoint object for TCP/IP connections given//	the available system software.LTCPEndpoint*UNetworkFactory::CreateTCPEndpoint(UInt32		inReceiveBufferSize){//#if FORCE_OPENTPT	ThrowIfNot_(HasOpenTransport());//#endif//#if !FORCE_MACTCP//	if (HasOpenTransport()) {		UOpenTptSupport::StartOpenTransport();							// Put this here because we must call							// InitOpenTransport() before OTCreateConfiguration.		return new LOpenTptTCPEndpoint();//	}//	else//#endif//		return new LMacTCPTCPEndpoint(inReceiveBufferSize);}// ---------------------------------------------------------------------------//		¥ CreateUDPEndpoint// ---------------------------------------------------------------------------//	Create the best endpoint object for TCP/IP connections given//	the available system software.LUDPEndpoint*UNetworkFactory::CreateUDPEndpoint(){//#if FORCE_OPENTPT	ThrowIfNot_(HasOpenTransport());//#endif//#if !FORCE_MACTCP//	if (HasOpenTransport()) {		UOpenTptSupport::StartOpenTransport();							// Put this here because we must call							// InitOpenTransport() before OTCreateConfiguration.		return new LOpenTptUDPEndpoint();//	} else//#endif//		return new LMacTCPUDPEndpoint();}// ---------------------------------------------------------------------------//		¥ CreateInternetMapper// ---------------------------------------------------------------------------//	Create the best name mapper object for Internet address//	resolution given the available system software.LInternetMapper*UNetworkFactory::CreateInternetMapper(){//#if FORCE_OPENTPT	ThrowIfNot_(HasOpenTransport());//#endif//#if !FORCE_MACTCP//	if (HasOpenTransport()) {		UOpenTptSupport::StartOpenTransport();				// must call InitOpenTransport() before OTCreateConfiguration		return new LOpenTptInetMapper();//	}//	else//#endif//		return new LMacTCPInetMapper();}// ---------------------------------------------------------------------------//		¥ HasTCP// ---------------------------------------------------------------------------BooleanUNetworkFactory::HasTCP(){	return (HasMacTCP() || HasOpenTransport());}// ---------------------------------------------------------------------------//		¥ HasOpenTransport// ---------------------------------------------------------------------------BooleanUNetworkFactory::HasOpenTransport(){	return UOpenTptSupport::HasOpenTransport();}// ---------------------------------------------------------------------------//		¥ HasMacTCP// ---------------------------------------------------------------------------BooleanUNetworkFactory::HasMacTCP(){//	return UMacTCPSupport::HasMacTCP();	return false;}